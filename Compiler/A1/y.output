Terminals unused in grammar

   DBQUOTE
   SNQUOTE
   CHARLITERAL
   ARGC
   ARGV


State 36 conflicts: 5 shift/reduce
State 54 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: main
    2     | decl_fun_fun_decl_star main
    3     | main decl_fun_star
    4     | decl_fun_fun_decl_star main decl_fun_star
    5     | expr
    6     | statement

    7 decl_fun_star: decl_fun
    8              | decl_fun_star decl_fun

    9 decl_fun: declaration
   10         | function

   11 decl_fun_fun_decl_star: decl_fun_fun_decl
   12                       | decl_fun_fun_decl_star decl_fun_fun_decl

   13 decl_fun_fun_decl: declaration
   14                  | function
   15                  | function_decl

   16 main: type MAIN LSB RSB block_statement
   17     | type MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT LB RB RSB block_statement

   18 function_decl: type variable_name LSB arg_decl RSB SMCOL

   19 function: type variable_name LSB arg_decl RSB block_statement

   20 arg_decl_star: COMA type variable_name
   21              | COMA type variable_name LB RB
   22              | arg_decl_star COMA type variable_name
   23              | arg_decl_star COMA type variable_name LB RB

   24 arg_decl: %empty
   25         | type variable_name
   26         | type variable_name LB RB
   27         | type variable_name LB RB arg_decl_star
   28         | type variable_name arg_decl_star

   29 declaration: declaration_type SMCOL
   30            | declaration_type multiple_decl_star SMCOL

   31 declaration_type: type variable_name
   32                 | type variable_name EQL expr
   33                 | type variable_name LB expr RB

   34 multiple_decl_star: multiple_decl
   35                   | multiple_decl_star multiple_decl

   36 multiple_decl: COMA variable_name
   37              | COMA variable_name EQL expr
   38              | COMA variable_name LB expr RB

   39 type: INT
   40     | CHAR
   41     | DOUBLE
   42     | VOID

   43 statement: block_statement
   44          | declaration
   45          | if_stmnt
   46          | WHILE LSB rel_expr_star RSB statement
   47          | variable_name assgn_op expr SMCOL
   48          | variable_name LB expr RB assgn_op expr SMCOL
   49          | FOR LSB for_expr RSB statement
   50          | function_call
   51          | RETURN expr SMCOL
   52          | BREAK SMCOL
   53          | CONTINUE SMCOL

   54 block_statement: LP multiple_statement RP
   55                | LP RP

   56 if_stmnt: IF LSB rel_expr_star RSB statement
   57         | IF LSB rel_expr_star RSB statement ELSE statement

   58 for_expr: variable_name EQL expr SMCOL rel_expr SMCOL expr

   59 multiple_statement: statement
   60                   | multiple_statement statement

   61 function_call: IDENT LSB arguments RSB SMCOL

   62 arguments: expr
   63          | expr argument_rest

   64 argument_rest: COMA expr
   65              | argument_rest COMA expr

   66 rel_expr_star: rel_expr
   67              | rel_expr_m
   68              | rel_expr rel_expr_star
   69              | rel_expr_m rel_expr_star

   70 rel_expr: primary_expr LOGOP primary_expr
   71         | primary_expr RELOP primary_expr

   72 rel_expr_m: rel_expr LOGOP primary_expr
   73           | rel_expr RELOP primary_expr

   74 expr: primary_expr binary_op primary_expr
   75     | expr binary_op primary_expr
   76     | primary_expr
   77     | rel_expr

   78 primary_expr: IDENT
   79             | NUM
   80             | STRING
   81             | LSB expr RSB
   82             | STAR primary_expr
   83             | MINUS primary_expr
   84             | NOT primary_expr
   85             | AMPRESAND primary_expr
   86             | primary_expr INCOP
   87             | INCOP primary_expr

   88 binary_op: ADD
   89          | MINUS
   90          | STAR
   91          | DIV
   92          | PERCNT

   93 assgn_op: ASGNOP
   94         | EQL

   95 variable_name: IDENT
   96              | STAR IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 56 57
ELSE (259) 57
FOR (260) 49
INT (261) 17 39
CHAR (262) 17 40
DOUBLE (263) 41
VOID (264) 42
WHILE (265) 46
CONTINUE (266) 53
BREAK (267) 52
RETURN (268) 51
LP (269) 54 55
RP (270) 54 55
LB (271) 17 21 23 26 27 33 38 48
RB (272) 17 21 23 26 27 33 38 48
LSB (273) 16 17 18 19 46 49 56 57 61 81
RSB (274) 16 17 18 19 46 49 56 57 61 81
DBQUOTE (275)
SNQUOTE (276)
RELOP (277) 71 73
LOGOP (278) 70 72
ASGNOP (279) 93
ADD (280) 88
MINUS (281) 83 89
DIV (282) 91
STAR (283) 17 82 90 96
PERCNT (284) 92
NOT (285) 84
AMPRESAND (286) 85
SMCOL (287) 18 29 30 47 48 51 52 53 58 61
IDENT (288) 17 61 78 95 96
NUM (289) 79
STRING (290) 80
CHARLITERAL (291)
COMA (292) 17 20 21 22 23 36 37 38 64 65
INCOP (293) 86 87
EQL (294) 32 37 58 94
MAIN (295) 16 17
ARGC (296)
ARGV (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
prog (44)
    on left: 1 2 3 4 5 6, on right: 0
decl_fun_star (45)
    on left: 7 8, on right: 3 4 8
decl_fun (46)
    on left: 9 10, on right: 7 8
decl_fun_fun_decl_star (47)
    on left: 11 12, on right: 2 4 12
decl_fun_fun_decl (48)
    on left: 13 14 15, on right: 11 12
main (49)
    on left: 16 17, on right: 1 2 3 4
function_decl (50)
    on left: 18, on right: 15
function (51)
    on left: 19, on right: 10 14
arg_decl_star (52)
    on left: 20 21 22 23, on right: 22 23 27 28
arg_decl (53)
    on left: 24 25 26 27 28, on right: 18 19
declaration (54)
    on left: 29 30, on right: 9 13 44
declaration_type (55)
    on left: 31 32 33, on right: 29 30
multiple_decl_star (56)
    on left: 34 35, on right: 30 35
multiple_decl (57)
    on left: 36 37 38, on right: 34 35
type (58)
    on left: 39 40 41 42, on right: 16 17 18 19 20 21 22 23 25 26 27
    28 31 32 33
statement (59)
    on left: 43 44 45 46 47 48 49 50 51 52 53, on right: 6 46 49 56
    57 59 60
block_statement (60)
    on left: 54 55, on right: 16 17 19 43
if_stmnt (61)
    on left: 56 57, on right: 45
for_expr (62)
    on left: 58, on right: 49
multiple_statement (63)
    on left: 59 60, on right: 54 60
function_call (64)
    on left: 61, on right: 50
arguments (65)
    on left: 62 63, on right: 61
argument_rest (66)
    on left: 64 65, on right: 63 65
rel_expr_star (67)
    on left: 66 67 68 69, on right: 46 56 57 68 69
rel_expr (68)
    on left: 70 71, on right: 58 66 68 72 73 77
rel_expr_m (69)
    on left: 72 73, on right: 67 69
expr (70)
    on left: 74 75 76 77, on right: 5 32 33 37 38 47 48 51 58 62 63
    64 65 75 81
primary_expr (71)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 70 71 72 73 74
    75 76 82 83 84 85 86 87
binary_op (72)
    on left: 88 89 90 91 92, on right: 74 75
assgn_op (73)
    on left: 93 94, on right: 47 48
variable_name (74)
    on left: 95 96, on right: 18 19 20 21 22 23 25 26 27 28 31 32 33
    36 37 38 47 48 58


State 0

    0 $accept: . prog $end

    IF         shift, and go to state 1
    FOR        shift, and go to state 2
    INT        shift, and go to state 3
    CHAR       shift, and go to state 4
    DOUBLE     shift, and go to state 5
    VOID       shift, and go to state 6
    WHILE      shift, and go to state 7
    CONTINUE   shift, and go to state 8
    BREAK      shift, and go to state 9
    RETURN     shift, and go to state 10
    LP         shift, and go to state 11
    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 14
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 17
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    prog                    go to state 21
    decl_fun_fun_decl_star  go to state 22
    decl_fun_fun_decl       go to state 23
    main                    go to state 24
    function_decl           go to state 25
    function                go to state 26
    declaration             go to state 27
    declaration_type        go to state 28
    type                    go to state 29
    statement               go to state 30
    block_statement         go to state 31
    if_stmnt                go to state 32
    function_call           go to state 33
    rel_expr                go to state 34
    expr                    go to state 35
    primary_expr            go to state 36
    variable_name           go to state 37


State 1

   56 if_stmnt: IF . LSB rel_expr_star RSB statement
   57         | IF . LSB rel_expr_star RSB statement ELSE statement

    LSB  shift, and go to state 38


State 2

   49 statement: FOR . LSB for_expr RSB statement

    LSB  shift, and go to state 39


State 3

   39 type: INT .

    $default  reduce using rule 39 (type)


State 4

   40 type: CHAR .

    $default  reduce using rule 40 (type)


State 5

   41 type: DOUBLE .

    $default  reduce using rule 41 (type)


State 6

   42 type: VOID .

    $default  reduce using rule 42 (type)


State 7

   46 statement: WHILE . LSB rel_expr_star RSB statement

    LSB  shift, and go to state 40


State 8

   53 statement: CONTINUE . SMCOL

    SMCOL  shift, and go to state 41


State 9

   52 statement: BREAK . SMCOL

    SMCOL  shift, and go to state 42


State 10

   51 statement: RETURN . expr SMCOL

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 45
    primary_expr  go to state 36


State 11

   54 block_statement: LP . multiple_statement RP
   55                | LP . RP

    IF        shift, and go to state 1
    FOR       shift, and go to state 2
    INT       shift, and go to state 3
    CHAR      shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    WHILE     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    BREAK     shift, and go to state 9
    RETURN    shift, and go to state 10
    LP        shift, and go to state 11
    RP        shift, and go to state 46
    STAR      shift, and go to state 47
    IDENT     shift, and go to state 48

    declaration         go to state 49
    declaration_type    go to state 28
    type                go to state 50
    statement           go to state 51
    block_statement     go to state 31
    if_stmnt            go to state 32
    multiple_statement  go to state 52
    function_call       go to state 33
    variable_name       go to state 37


State 12

   81 primary_expr: LSB . expr RSB

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 53
    primary_expr  go to state 36


State 13

   83 primary_expr: MINUS . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 54


State 14

   82 primary_expr: STAR . primary_expr
   96 variable_name: STAR . IDENT

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 55
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 56


State 15

   84 primary_expr: NOT . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 57


State 16

   85 primary_expr: AMPRESAND . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 58


State 17

   61 function_call: IDENT . LSB arguments RSB SMCOL
   78 primary_expr: IDENT .
   95 variable_name: IDENT .

    LSB  shift, and go to state 59

    LB        reduce using rule 95 (variable_name)
    ASGNOP    reduce using rule 95 (variable_name)
    EQL       reduce using rule 95 (variable_name)
    $default  reduce using rule 78 (primary_expr)


State 18

   79 primary_expr: NUM .

    $default  reduce using rule 79 (primary_expr)


State 19

   80 primary_expr: STRING .

    $default  reduce using rule 80 (primary_expr)


State 20

   87 primary_expr: INCOP . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 60


State 21

    0 $accept: prog . $end

    $end  shift, and go to state 61


State 22

    2 prog: decl_fun_fun_decl_star . main
    4     | decl_fun_fun_decl_star . main decl_fun_star
   12 decl_fun_fun_decl_star: decl_fun_fun_decl_star . decl_fun_fun_decl

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    decl_fun_fun_decl  go to state 62
    main               go to state 63
    function_decl      go to state 25
    function           go to state 26
    declaration        go to state 64
    declaration_type   go to state 28
    type               go to state 29


State 23

   11 decl_fun_fun_decl_star: decl_fun_fun_decl .

    $default  reduce using rule 11 (decl_fun_fun_decl_star)


State 24

    1 prog: main .
    3     | main . decl_fun_star

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 1 (prog)

    decl_fun_star     go to state 65
    decl_fun          go to state 66
    function          go to state 67
    declaration       go to state 68
    declaration_type  go to state 28
    type              go to state 69


State 25

   15 decl_fun_fun_decl: function_decl .

    $default  reduce using rule 15 (decl_fun_fun_decl)


State 26

   14 decl_fun_fun_decl: function .

    $default  reduce using rule 14 (decl_fun_fun_decl)


State 27

   13 decl_fun_fun_decl: declaration .
   44 statement: declaration .

    $end      reduce using rule 44 (statement)
    $default  reduce using rule 13 (decl_fun_fun_decl)


State 28

   29 declaration: declaration_type . SMCOL
   30            | declaration_type . multiple_decl_star SMCOL

    SMCOL  shift, and go to state 70
    COMA   shift, and go to state 71

    multiple_decl_star  go to state 72
    multiple_decl       go to state 73


State 29

   16 main: type . MAIN LSB RSB block_statement
   17     | type . MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT LB RB RSB block_statement
   18 function_decl: type . variable_name LSB arg_decl RSB SMCOL
   19 function: type . variable_name LSB arg_decl RSB block_statement
   31 declaration_type: type . variable_name
   32                 | type . variable_name EQL expr
   33                 | type . variable_name LB expr RB

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74
    MAIN   shift, and go to state 75

    variable_name  go to state 76


State 30

    6 prog: statement .

    $default  reduce using rule 6 (prog)


State 31

   43 statement: block_statement .

    $default  reduce using rule 43 (statement)


State 32

   45 statement: if_stmnt .

    $default  reduce using rule 45 (statement)


State 33

   50 statement: function_call .

    $default  reduce using rule 50 (statement)


State 34

   77 expr: rel_expr .

    $default  reduce using rule 77 (expr)


State 35

    5 prog: expr .
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    $default  reduce using rule 5 (prog)

    binary_op  go to state 82


State 36

   70 rel_expr: primary_expr . LOGOP primary_expr
   71         | primary_expr . RELOP primary_expr
   74 expr: primary_expr . binary_op primary_expr
   76     | primary_expr .
   86 primary_expr: primary_expr . INCOP

    RELOP   shift, and go to state 83
    LOGOP   shift, and go to state 84
    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81
    INCOP   shift, and go to state 85

    ADD       [reduce using rule 76 (expr)]
    MINUS     [reduce using rule 76 (expr)]
    DIV       [reduce using rule 76 (expr)]
    STAR      [reduce using rule 76 (expr)]
    PERCNT    [reduce using rule 76 (expr)]
    $default  reduce using rule 76 (expr)

    binary_op  go to state 86


State 37

   47 statement: variable_name . assgn_op expr SMCOL
   48          | variable_name . LB expr RB assgn_op expr SMCOL

    LB      shift, and go to state 87
    ASGNOP  shift, and go to state 88
    EQL     shift, and go to state 89

    assgn_op  go to state 90


State 38

   56 if_stmnt: IF LSB . rel_expr_star RSB statement
   57         | IF LSB . rel_expr_star RSB statement ELSE statement

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr_star  go to state 91
    rel_expr       go to state 92
    rel_expr_m     go to state 93
    primary_expr   go to state 94


State 39

   49 statement: FOR LSB . for_expr RSB statement

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    for_expr       go to state 95
    variable_name  go to state 96


State 40

   46 statement: WHILE LSB . rel_expr_star RSB statement

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr_star  go to state 97
    rel_expr       go to state 92
    rel_expr_m     go to state 93
    primary_expr   go to state 94


State 41

   53 statement: CONTINUE SMCOL .

    $default  reduce using rule 53 (statement)


State 42

   52 statement: BREAK SMCOL .

    $default  reduce using rule 52 (statement)


State 43

   82 primary_expr: STAR . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 56


State 44

   78 primary_expr: IDENT .

    $default  reduce using rule 78 (primary_expr)


State 45

   51 statement: RETURN expr . SMCOL
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81
    SMCOL   shift, and go to state 98

    binary_op  go to state 82


State 46

   55 block_statement: LP RP .

    $default  reduce using rule 55 (block_statement)


State 47

   96 variable_name: STAR . IDENT

    IDENT  shift, and go to state 99


State 48

   61 function_call: IDENT . LSB arguments RSB SMCOL
   95 variable_name: IDENT .

    LSB  shift, and go to state 59

    $default  reduce using rule 95 (variable_name)


State 49

   44 statement: declaration .

    $default  reduce using rule 44 (statement)


State 50

   31 declaration_type: type . variable_name
   32                 | type . variable_name EQL expr
   33                 | type . variable_name LB expr RB

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    variable_name  go to state 100


State 51

   59 multiple_statement: statement .

    $default  reduce using rule 59 (multiple_statement)


State 52

   54 block_statement: LP multiple_statement . RP
   60 multiple_statement: multiple_statement . statement

    IF        shift, and go to state 1
    FOR       shift, and go to state 2
    INT       shift, and go to state 3
    CHAR      shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    WHILE     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    BREAK     shift, and go to state 9
    RETURN    shift, and go to state 10
    LP        shift, and go to state 11
    RP        shift, and go to state 101
    STAR      shift, and go to state 47
    IDENT     shift, and go to state 48

    declaration       go to state 49
    declaration_type  go to state 28
    type              go to state 50
    statement         go to state 102
    block_statement   go to state 31
    if_stmnt          go to state 32
    function_call     go to state 33
    variable_name     go to state 37


State 53

   75 expr: expr . binary_op primary_expr
   81 primary_expr: LSB expr . RSB

    RSB     shift, and go to state 103
    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    binary_op  go to state 82


State 54

   83 primary_expr: MINUS primary_expr .
   86             | primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 83 (primary_expr)]
    $default  reduce using rule 83 (primary_expr)


State 55

   78 primary_expr: IDENT .
   96 variable_name: STAR IDENT .

    LB        reduce using rule 96 (variable_name)
    ASGNOP    reduce using rule 96 (variable_name)
    EQL       reduce using rule 96 (variable_name)
    $default  reduce using rule 78 (primary_expr)


State 56

   82 primary_expr: STAR primary_expr .
   86             | primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 82 (primary_expr)]
    $default  reduce using rule 82 (primary_expr)


State 57

   84 primary_expr: NOT primary_expr .
   86             | primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 84 (primary_expr)]
    $default  reduce using rule 84 (primary_expr)


State 58

   85 primary_expr: AMPRESAND primary_expr .
   86             | primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 85 (primary_expr)]
    $default  reduce using rule 85 (primary_expr)


State 59

   61 function_call: IDENT LSB . arguments RSB SMCOL

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    arguments     go to state 104
    rel_expr      go to state 34
    expr          go to state 105
    primary_expr  go to state 36


State 60

   86 primary_expr: primary_expr . INCOP
   87             | INCOP primary_expr .

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 87 (primary_expr)]
    $default  reduce using rule 87 (primary_expr)


State 61

    0 $accept: prog $end .

    $default  accept


State 62

   12 decl_fun_fun_decl_star: decl_fun_fun_decl_star decl_fun_fun_decl .

    $default  reduce using rule 12 (decl_fun_fun_decl_star)


State 63

    2 prog: decl_fun_fun_decl_star main .
    4     | decl_fun_fun_decl_star main . decl_fun_star

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 2 (prog)

    decl_fun_star     go to state 106
    decl_fun          go to state 66
    function          go to state 67
    declaration       go to state 68
    declaration_type  go to state 28
    type              go to state 69


State 64

   13 decl_fun_fun_decl: declaration .

    $default  reduce using rule 13 (decl_fun_fun_decl)


State 65

    3 prog: main decl_fun_star .
    8 decl_fun_star: decl_fun_star . decl_fun

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 3 (prog)

    decl_fun          go to state 107
    function          go to state 67
    declaration       go to state 68
    declaration_type  go to state 28
    type              go to state 69


State 66

    7 decl_fun_star: decl_fun .

    $default  reduce using rule 7 (decl_fun_star)


State 67

   10 decl_fun: function .

    $default  reduce using rule 10 (decl_fun)


State 68

    9 decl_fun: declaration .

    $default  reduce using rule 9 (decl_fun)


State 69

   19 function: type . variable_name LSB arg_decl RSB block_statement
   31 declaration_type: type . variable_name
   32                 | type . variable_name EQL expr
   33                 | type . variable_name LB expr RB

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    variable_name  go to state 108


State 70

   29 declaration: declaration_type SMCOL .

    $default  reduce using rule 29 (declaration)


State 71

   36 multiple_decl: COMA . variable_name
   37              | COMA . variable_name EQL expr
   38              | COMA . variable_name LB expr RB

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    variable_name  go to state 109


State 72

   30 declaration: declaration_type multiple_decl_star . SMCOL
   35 multiple_decl_star: multiple_decl_star . multiple_decl

    SMCOL  shift, and go to state 110
    COMA   shift, and go to state 71

    multiple_decl  go to state 111


State 73

   34 multiple_decl_star: multiple_decl .

    $default  reduce using rule 34 (multiple_decl_star)


State 74

   95 variable_name: IDENT .

    $default  reduce using rule 95 (variable_name)


State 75

   16 main: type MAIN . LSB RSB block_statement
   17     | type MAIN . LSB INT STAR IDENT COMA CHAR STAR IDENT LB RB RSB block_statement

    LSB  shift, and go to state 112


State 76

   18 function_decl: type variable_name . LSB arg_decl RSB SMCOL
   19 function: type variable_name . LSB arg_decl RSB block_statement
   31 declaration_type: type variable_name .
   32                 | type variable_name . EQL expr
   33                 | type variable_name . LB expr RB

    LB   shift, and go to state 113
    LSB  shift, and go to state 114
    EQL  shift, and go to state 115

    $default  reduce using rule 31 (declaration_type)


State 77

   88 binary_op: ADD .

    $default  reduce using rule 88 (binary_op)


State 78

   89 binary_op: MINUS .

    $default  reduce using rule 89 (binary_op)


State 79

   91 binary_op: DIV .

    $default  reduce using rule 91 (binary_op)


State 80

   90 binary_op: STAR .

    $default  reduce using rule 90 (binary_op)


State 81

   92 binary_op: PERCNT .

    $default  reduce using rule 92 (binary_op)


State 82

   75 expr: expr binary_op . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 116


State 83

   71 rel_expr: primary_expr RELOP . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 117


State 84

   70 rel_expr: primary_expr LOGOP . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 118


State 85

   86 primary_expr: primary_expr INCOP .

    $default  reduce using rule 86 (primary_expr)


State 86

   74 expr: primary_expr binary_op . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 119


State 87

   48 statement: variable_name LB . expr RB assgn_op expr SMCOL

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 120
    primary_expr  go to state 36


State 88

   93 assgn_op: ASGNOP .

    $default  reduce using rule 93 (assgn_op)


State 89

   94 assgn_op: EQL .

    $default  reduce using rule 94 (assgn_op)


State 90

   47 statement: variable_name assgn_op . expr SMCOL

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 121
    primary_expr  go to state 36


State 91

   56 if_stmnt: IF LSB rel_expr_star . RSB statement
   57         | IF LSB rel_expr_star . RSB statement ELSE statement

    RSB  shift, and go to state 122


State 92

   66 rel_expr_star: rel_expr .
   68              | rel_expr . rel_expr_star
   72 rel_expr_m: rel_expr . LOGOP primary_expr
   73           | rel_expr . RELOP primary_expr

    LSB        shift, and go to state 12
    RELOP      shift, and go to state 123
    LOGOP      shift, and go to state 124
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    $default  reduce using rule 66 (rel_expr_star)

    rel_expr_star  go to state 125
    rel_expr       go to state 92
    rel_expr_m     go to state 93
    primary_expr   go to state 94


State 93

   67 rel_expr_star: rel_expr_m .
   69              | rel_expr_m . rel_expr_star

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    $default  reduce using rule 67 (rel_expr_star)

    rel_expr_star  go to state 126
    rel_expr       go to state 92
    rel_expr_m     go to state 93
    primary_expr   go to state 94


State 94

   70 rel_expr: primary_expr . LOGOP primary_expr
   71         | primary_expr . RELOP primary_expr
   86 primary_expr: primary_expr . INCOP

    RELOP  shift, and go to state 83
    LOGOP  shift, and go to state 84
    INCOP  shift, and go to state 85


State 95

   49 statement: FOR LSB for_expr . RSB statement

    RSB  shift, and go to state 127


State 96

   58 for_expr: variable_name . EQL expr SMCOL rel_expr SMCOL expr

    EQL  shift, and go to state 128


State 97

   46 statement: WHILE LSB rel_expr_star . RSB statement

    RSB  shift, and go to state 129


State 98

   51 statement: RETURN expr SMCOL .

    $default  reduce using rule 51 (statement)


State 99

   96 variable_name: STAR IDENT .

    $default  reduce using rule 96 (variable_name)


State 100

   31 declaration_type: type variable_name .
   32                 | type variable_name . EQL expr
   33                 | type variable_name . LB expr RB

    LB   shift, and go to state 113
    EQL  shift, and go to state 115

    $default  reduce using rule 31 (declaration_type)


State 101

   54 block_statement: LP multiple_statement RP .

    $default  reduce using rule 54 (block_statement)


State 102

   60 multiple_statement: multiple_statement statement .

    $default  reduce using rule 60 (multiple_statement)


State 103

   81 primary_expr: LSB expr RSB .

    $default  reduce using rule 81 (primary_expr)


State 104

   61 function_call: IDENT LSB arguments . RSB SMCOL

    RSB  shift, and go to state 130


State 105

   62 arguments: expr .
   63          | expr . argument_rest
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81
    COMA    shift, and go to state 131

    $default  reduce using rule 62 (arguments)

    argument_rest  go to state 132
    binary_op      go to state 82


State 106

    4 prog: decl_fun_fun_decl_star main decl_fun_star .
    8 decl_fun_star: decl_fun_star . decl_fun

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 4 (prog)

    decl_fun          go to state 107
    function          go to state 67
    declaration       go to state 68
    declaration_type  go to state 28
    type              go to state 69


State 107

    8 decl_fun_star: decl_fun_star decl_fun .

    $default  reduce using rule 8 (decl_fun_star)


State 108

   19 function: type variable_name . LSB arg_decl RSB block_statement
   31 declaration_type: type variable_name .
   32                 | type variable_name . EQL expr
   33                 | type variable_name . LB expr RB

    LB   shift, and go to state 113
    LSB  shift, and go to state 133
    EQL  shift, and go to state 115

    $default  reduce using rule 31 (declaration_type)


State 109

   36 multiple_decl: COMA variable_name .
   37              | COMA variable_name . EQL expr
   38              | COMA variable_name . LB expr RB

    LB   shift, and go to state 134
    EQL  shift, and go to state 135

    $default  reduce using rule 36 (multiple_decl)


State 110

   30 declaration: declaration_type multiple_decl_star SMCOL .

    $default  reduce using rule 30 (declaration)


State 111

   35 multiple_decl_star: multiple_decl_star multiple_decl .

    $default  reduce using rule 35 (multiple_decl_star)


State 112

   16 main: type MAIN LSB . RSB block_statement
   17     | type MAIN LSB . INT STAR IDENT COMA CHAR STAR IDENT LB RB RSB block_statement

    INT  shift, and go to state 136
    RSB  shift, and go to state 137


State 113

   33 declaration_type: type variable_name LB . expr RB

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 138
    primary_expr  go to state 36


State 114

   18 function_decl: type variable_name LSB . arg_decl RSB SMCOL
   19 function: type variable_name LSB . arg_decl RSB block_statement

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 24 (arg_decl)

    arg_decl  go to state 139
    type      go to state 140


State 115

   32 declaration_type: type variable_name EQL . expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 141
    primary_expr  go to state 36


State 116

   75 expr: expr binary_op primary_expr .
   86 primary_expr: primary_expr . INCOP

    INCOP  shift, and go to state 85

    $default  reduce using rule 75 (expr)


State 117

   71 rel_expr: primary_expr RELOP primary_expr .
   86 primary_expr: primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 71 (rel_expr)]
    $default  reduce using rule 71 (rel_expr)


State 118

   70 rel_expr: primary_expr LOGOP primary_expr .
   86 primary_expr: primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 70 (rel_expr)]
    $default  reduce using rule 70 (rel_expr)


State 119

   74 expr: primary_expr binary_op primary_expr .
   86 primary_expr: primary_expr . INCOP

    INCOP  shift, and go to state 85

    $default  reduce using rule 74 (expr)


State 120

   48 statement: variable_name LB expr . RB assgn_op expr SMCOL
   75 expr: expr . binary_op primary_expr

    RB      shift, and go to state 142
    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    binary_op  go to state 82


State 121

   47 statement: variable_name assgn_op expr . SMCOL
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81
    SMCOL   shift, and go to state 143

    binary_op  go to state 82


State 122

   56 if_stmnt: IF LSB rel_expr_star RSB . statement
   57         | IF LSB rel_expr_star RSB . statement ELSE statement

    IF        shift, and go to state 1
    FOR       shift, and go to state 2
    INT       shift, and go to state 3
    CHAR      shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    WHILE     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    BREAK     shift, and go to state 9
    RETURN    shift, and go to state 10
    LP        shift, and go to state 11
    STAR      shift, and go to state 47
    IDENT     shift, and go to state 48

    declaration       go to state 49
    declaration_type  go to state 28
    type              go to state 50
    statement         go to state 144
    block_statement   go to state 31
    if_stmnt          go to state 32
    function_call     go to state 33
    variable_name     go to state 37


State 123

   73 rel_expr_m: rel_expr RELOP . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 145


State 124

   72 rel_expr_m: rel_expr LOGOP . primary_expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    primary_expr  go to state 146


State 125

   68 rel_expr_star: rel_expr rel_expr_star .

    $default  reduce using rule 68 (rel_expr_star)


State 126

   69 rel_expr_star: rel_expr_m rel_expr_star .

    $default  reduce using rule 69 (rel_expr_star)


State 127

   49 statement: FOR LSB for_expr RSB . statement

    IF        shift, and go to state 1
    FOR       shift, and go to state 2
    INT       shift, and go to state 3
    CHAR      shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    WHILE     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    BREAK     shift, and go to state 9
    RETURN    shift, and go to state 10
    LP        shift, and go to state 11
    STAR      shift, and go to state 47
    IDENT     shift, and go to state 48

    declaration       go to state 49
    declaration_type  go to state 28
    type              go to state 50
    statement         go to state 147
    block_statement   go to state 31
    if_stmnt          go to state 32
    function_call     go to state 33
    variable_name     go to state 37


State 128

   58 for_expr: variable_name EQL . expr SMCOL rel_expr SMCOL expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 148
    primary_expr  go to state 36


State 129

   46 statement: WHILE LSB rel_expr_star RSB . statement

    IF        shift, and go to state 1
    FOR       shift, and go to state 2
    INT       shift, and go to state 3
    CHAR      shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    WHILE     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    BREAK     shift, and go to state 9
    RETURN    shift, and go to state 10
    LP        shift, and go to state 11
    STAR      shift, and go to state 47
    IDENT     shift, and go to state 48

    declaration       go to state 49
    declaration_type  go to state 28
    type              go to state 50
    statement         go to state 149
    block_statement   go to state 31
    if_stmnt          go to state 32
    function_call     go to state 33
    variable_name     go to state 37


State 130

   61 function_call: IDENT LSB arguments RSB . SMCOL

    SMCOL  shift, and go to state 150


State 131

   64 argument_rest: COMA . expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 151
    primary_expr  go to state 36


State 132

   63 arguments: expr argument_rest .
   65 argument_rest: argument_rest . COMA expr

    COMA  shift, and go to state 152

    $default  reduce using rule 63 (arguments)


State 133

   19 function: type variable_name LSB . arg_decl RSB block_statement

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 24 (arg_decl)

    arg_decl  go to state 153
    type      go to state 140


State 134

   38 multiple_decl: COMA variable_name LB . expr RB

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 154
    primary_expr  go to state 36


State 135

   37 multiple_decl: COMA variable_name EQL . expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 155
    primary_expr  go to state 36


State 136

   17 main: type MAIN LSB INT . STAR IDENT COMA CHAR STAR IDENT LB RB RSB block_statement

    STAR  shift, and go to state 156


State 137

   16 main: type MAIN LSB RSB . block_statement

    LP  shift, and go to state 11

    block_statement  go to state 157


State 138

   33 declaration_type: type variable_name LB expr . RB
   75 expr: expr . binary_op primary_expr

    RB      shift, and go to state 158
    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    binary_op  go to state 82


State 139

   18 function_decl: type variable_name LSB arg_decl . RSB SMCOL
   19 function: type variable_name LSB arg_decl . RSB block_statement

    RSB  shift, and go to state 159


State 140

   25 arg_decl: type . variable_name
   26         | type . variable_name LB RB
   27         | type . variable_name LB RB arg_decl_star
   28         | type . variable_name arg_decl_star

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    variable_name  go to state 160


State 141

   32 declaration_type: type variable_name EQL expr .
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    $default  reduce using rule 32 (declaration_type)

    binary_op  go to state 82


State 142

   48 statement: variable_name LB expr RB . assgn_op expr SMCOL

    ASGNOP  shift, and go to state 88
    EQL     shift, and go to state 89

    assgn_op  go to state 161


State 143

   47 statement: variable_name assgn_op expr SMCOL .

    $default  reduce using rule 47 (statement)


State 144

   56 if_stmnt: IF LSB rel_expr_star RSB statement .
   57         | IF LSB rel_expr_star RSB statement . ELSE statement

    ELSE  shift, and go to state 162

    ELSE      [reduce using rule 56 (if_stmnt)]
    $default  reduce using rule 56 (if_stmnt)


State 145

   73 rel_expr_m: rel_expr RELOP primary_expr .
   86 primary_expr: primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 73 (rel_expr_m)]
    $default  reduce using rule 73 (rel_expr_m)


State 146

   72 rel_expr_m: rel_expr LOGOP primary_expr .
   86 primary_expr: primary_expr . INCOP

    INCOP  shift, and go to state 85

    INCOP     [reduce using rule 72 (rel_expr_m)]
    $default  reduce using rule 72 (rel_expr_m)


State 147

   49 statement: FOR LSB for_expr RSB statement .

    $default  reduce using rule 49 (statement)


State 148

   58 for_expr: variable_name EQL expr . SMCOL rel_expr SMCOL expr
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81
    SMCOL   shift, and go to state 163

    binary_op  go to state 82


State 149

   46 statement: WHILE LSB rel_expr_star RSB statement .

    $default  reduce using rule 46 (statement)


State 150

   61 function_call: IDENT LSB arguments RSB SMCOL .

    $default  reduce using rule 61 (function_call)


State 151

   64 argument_rest: COMA expr .
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    $default  reduce using rule 64 (argument_rest)

    binary_op  go to state 82


State 152

   65 argument_rest: argument_rest COMA . expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 164
    primary_expr  go to state 36


State 153

   19 function: type variable_name LSB arg_decl . RSB block_statement

    RSB  shift, and go to state 165


State 154

   38 multiple_decl: COMA variable_name LB expr . RB
   75 expr: expr . binary_op primary_expr

    RB      shift, and go to state 166
    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    binary_op  go to state 82


State 155

   37 multiple_decl: COMA variable_name EQL expr .
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    $default  reduce using rule 37 (multiple_decl)

    binary_op  go to state 82


State 156

   17 main: type MAIN LSB INT STAR . IDENT COMA CHAR STAR IDENT LB RB RSB block_statement

    IDENT  shift, and go to state 167


State 157

   16 main: type MAIN LSB RSB block_statement .

    $default  reduce using rule 16 (main)


State 158

   33 declaration_type: type variable_name LB expr RB .

    $default  reduce using rule 33 (declaration_type)


State 159

   18 function_decl: type variable_name LSB arg_decl RSB . SMCOL
   19 function: type variable_name LSB arg_decl RSB . block_statement

    LP     shift, and go to state 11
    SMCOL  shift, and go to state 168

    block_statement  go to state 169


State 160

   25 arg_decl: type variable_name .
   26         | type variable_name . LB RB
   27         | type variable_name . LB RB arg_decl_star
   28         | type variable_name . arg_decl_star

    LB    shift, and go to state 170
    COMA  shift, and go to state 171

    $default  reduce using rule 25 (arg_decl)

    arg_decl_star  go to state 172


State 161

   48 statement: variable_name LB expr RB assgn_op . expr SMCOL

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 173
    primary_expr  go to state 36


State 162

   57 if_stmnt: IF LSB rel_expr_star RSB statement ELSE . statement

    IF        shift, and go to state 1
    FOR       shift, and go to state 2
    INT       shift, and go to state 3
    CHAR      shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    WHILE     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    BREAK     shift, and go to state 9
    RETURN    shift, and go to state 10
    LP        shift, and go to state 11
    STAR      shift, and go to state 47
    IDENT     shift, and go to state 48

    declaration       go to state 49
    declaration_type  go to state 28
    type              go to state 50
    statement         go to state 174
    block_statement   go to state 31
    if_stmnt          go to state 32
    function_call     go to state 33
    variable_name     go to state 37


State 163

   58 for_expr: variable_name EQL expr SMCOL . rel_expr SMCOL expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 175
    primary_expr  go to state 94


State 164

   65 argument_rest: argument_rest COMA expr .
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    $default  reduce using rule 65 (argument_rest)

    binary_op  go to state 82


State 165

   19 function: type variable_name LSB arg_decl RSB . block_statement

    LP  shift, and go to state 11

    block_statement  go to state 169


State 166

   38 multiple_decl: COMA variable_name LB expr RB .

    $default  reduce using rule 38 (multiple_decl)


State 167

   17 main: type MAIN LSB INT STAR IDENT . COMA CHAR STAR IDENT LB RB RSB block_statement

    COMA  shift, and go to state 176


State 168

   18 function_decl: type variable_name LSB arg_decl RSB SMCOL .

    $default  reduce using rule 18 (function_decl)


State 169

   19 function: type variable_name LSB arg_decl RSB block_statement .

    $default  reduce using rule 19 (function)


State 170

   26 arg_decl: type variable_name LB . RB
   27         | type variable_name LB . RB arg_decl_star

    RB  shift, and go to state 177


State 171

   20 arg_decl_star: COMA . type variable_name
   21              | COMA . type variable_name LB RB

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    type  go to state 178


State 172

   22 arg_decl_star: arg_decl_star . COMA type variable_name
   23              | arg_decl_star . COMA type variable_name LB RB
   28 arg_decl: type variable_name arg_decl_star .

    COMA  shift, and go to state 179

    $default  reduce using rule 28 (arg_decl)


State 173

   48 statement: variable_name LB expr RB assgn_op expr . SMCOL
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81
    SMCOL   shift, and go to state 180

    binary_op  go to state 82


State 174

   57 if_stmnt: IF LSB rel_expr_star RSB statement ELSE statement .

    $default  reduce using rule 57 (if_stmnt)


State 175

   58 for_expr: variable_name EQL expr SMCOL rel_expr . SMCOL expr

    SMCOL  shift, and go to state 181


State 176

   17 main: type MAIN LSB INT STAR IDENT COMA . CHAR STAR IDENT LB RB RSB block_statement

    CHAR  shift, and go to state 182


State 177

   26 arg_decl: type variable_name LB RB .
   27         | type variable_name LB RB . arg_decl_star

    COMA  shift, and go to state 171

    $default  reduce using rule 26 (arg_decl)

    arg_decl_star  go to state 183


State 178

   20 arg_decl_star: COMA type . variable_name
   21              | COMA type . variable_name LB RB

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    variable_name  go to state 184


State 179

   22 arg_decl_star: arg_decl_star COMA . type variable_name
   23              | arg_decl_star COMA . type variable_name LB RB

    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    type  go to state 185


State 180

   48 statement: variable_name LB expr RB assgn_op expr SMCOL .

    $default  reduce using rule 48 (statement)


State 181

   58 for_expr: variable_name EQL expr SMCOL rel_expr SMCOL . expr

    LSB        shift, and go to state 12
    MINUS      shift, and go to state 13
    STAR       shift, and go to state 43
    NOT        shift, and go to state 15
    AMPRESAND  shift, and go to state 16
    IDENT      shift, and go to state 44
    NUM        shift, and go to state 18
    STRING     shift, and go to state 19
    INCOP      shift, and go to state 20

    rel_expr      go to state 34
    expr          go to state 186
    primary_expr  go to state 36


State 182

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR . STAR IDENT LB RB RSB block_statement

    STAR  shift, and go to state 187


State 183

   22 arg_decl_star: arg_decl_star . COMA type variable_name
   23              | arg_decl_star . COMA type variable_name LB RB
   27 arg_decl: type variable_name LB RB arg_decl_star .

    COMA  shift, and go to state 179

    $default  reduce using rule 27 (arg_decl)


State 184

   20 arg_decl_star: COMA type variable_name .
   21              | COMA type variable_name . LB RB

    LB  shift, and go to state 188

    $default  reduce using rule 20 (arg_decl_star)


State 185

   22 arg_decl_star: arg_decl_star COMA type . variable_name
   23              | arg_decl_star COMA type . variable_name LB RB

    STAR   shift, and go to state 47
    IDENT  shift, and go to state 74

    variable_name  go to state 189


State 186

   58 for_expr: variable_name EQL expr SMCOL rel_expr SMCOL expr .
   75 expr: expr . binary_op primary_expr

    ADD     shift, and go to state 77
    MINUS   shift, and go to state 78
    DIV     shift, and go to state 79
    STAR    shift, and go to state 80
    PERCNT  shift, and go to state 81

    $default  reduce using rule 58 (for_expr)

    binary_op  go to state 82


State 187

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR STAR . IDENT LB RB RSB block_statement

    IDENT  shift, and go to state 190


State 188

   21 arg_decl_star: COMA type variable_name LB . RB

    RB  shift, and go to state 191


State 189

   22 arg_decl_star: arg_decl_star COMA type variable_name .
   23              | arg_decl_star COMA type variable_name . LB RB

    LB  shift, and go to state 192

    $default  reduce using rule 22 (arg_decl_star)


State 190

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT . LB RB RSB block_statement

    LB  shift, and go to state 193


State 191

   21 arg_decl_star: COMA type variable_name LB RB .

    $default  reduce using rule 21 (arg_decl_star)


State 192

   23 arg_decl_star: arg_decl_star COMA type variable_name LB . RB

    RB  shift, and go to state 194


State 193

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT LB . RB RSB block_statement

    RB  shift, and go to state 195


State 194

   23 arg_decl_star: arg_decl_star COMA type variable_name LB RB .

    $default  reduce using rule 23 (arg_decl_star)


State 195

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT LB RB . RSB block_statement

    RSB  shift, and go to state 196


State 196

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT LB RB RSB . block_statement

    LP  shift, and go to state 11

    block_statement  go to state 197


State 197

   17 main: type MAIN LSB INT STAR IDENT COMA CHAR STAR IDENT LB RB RSB block_statement .

    $default  reduce using rule 17 (main)
